import org.apache.tools.ant.taskdefs.condition.Os

plugins {
	id 'base'
	id 'com.github.node-gradle.node' version '2.2.4'
}

node {
	version = '15.2.0'
	download = true
}

task buildFrontend(type: NpmTask) {
	description 'Build the client angular application'

	args = ['run', 'build']
}

task buildExportFile(type: NodeTask) {
	script = file("$projectDir/scripts/build-export.js")

	Process serveProcess
	doFirst {
		println "STARTING ANGULAR DEVELOPMENT SERVER..."
		ProcessBuilder serveBuilder

		String serveCommand = "ng serve --prod --live-reload=false --watch=false"
		if (Os.isFamily(Os.FAMILY_WINDOWS)) {
			// WINDOWS
			serveBuilder = new ProcessBuilder("cmd /c $serveCommand".split(" "))
		} else {
			// LINUX
			serveBuilder = new ProcessBuilder("bash -c $serveCommand".split(" "))
		}
		serveBuilder.redirectErrorStream(true)
		serveBuilder.directory(new File("$projectDir"))
		serveProcess = serveBuilder.start()

		InputStream stdout = serveProcess.getInputStream()
		BufferedReader reader = new BufferedReader(new InputStreamReader(stdout))

		def line
		while ((line = reader.readLine()) != null) {
			println line
			if (line.contains("Compiled successfully")) {
				break;
			}
		}

		println "ANGULAR DEVELOPMENT SERVER STARTED"
	}

	doLast {
		println "SHUTTING DOWN ANGULAR DEVELOPMENT SERVER..."
		serveProcess.destroy()
		serveProcess.descendants().forEach({
			it.destroy()
		})
		println "ANGULAR DEVELOPMENT SERVER STOPPED"
	}
}
buildFrontend.finalizedBy(buildExportFile)
